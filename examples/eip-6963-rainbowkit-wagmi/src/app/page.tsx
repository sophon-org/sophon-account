"use client";

import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useAccount } from "wagmi";
import { SignMessage } from "./components/sign";
import { ConnectButton } from "@rainbow-me/rainbowkit";
import { SophonConnectButton } from "./components/sophon-connect";
import { SignTransaction } from "./components/signTx";
import { VerifySignature } from "./components/verify";
import { useState } from "react";

enum ConnectionOptions {
  RainbowKit = "RainbowKit",
  SophonGlobalAccount = "Sophon Global Account",
}

enum SignTxOptions {
  SignTransaction = "Sign Transaction",
  RecoverAddress = "Recover Address",
  VerifySignature = "Verify Signature",
}

const Home: NextPage = () => {
  const { isConnected } = useAccount();
  const [showConnectionOptions, setShowConnectionOptions] = useState(
    ConnectionOptions.RainbowKit,
  );
  const [showSignTx, setShowSignTx] = useState(SignTxOptions.SignTransaction);

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <div
          style={{
            display: "flex",
            flexDirection: "column",
            gap: "2rem",
            width: "100%",
            maxWidth: "800px",
            marginBottom: "2rem",
          }}
        >
          <button
            onClick={() =>
              setShowConnectionOptions(
                showConnectionOptions === "RainbowKit"
                  ? "Sophon Global Account"
                  : "RainbowKit",
              )
            }
            style={{
              padding: "0.5rem 1rem",
              borderRadius: "8px",
              border: "1px solid #e1e1e1",
              backgroundColor: "#3b82f6",
              color: "white",
              cursor: "pointer",
              fontWeight: "600",
              fontSize: "16px",
              marginBottom: "1rem",
            }}
          >
            {showConnectionOptions === "Sophon Global Account"
              ? "Connect with RainbowKit"
              : "Connect with Sophon Global Account"}
          </button>

          {showConnectionOptions === "RainbowKit" && (
            <section
              style={{
                padding: "1.5rem",
                borderRadius: "12px",
                border: "1px solid #e1e1e1",
                backgroundColor: "#ffffff",
                boxShadow: "0 2px 8px rgba(0, 0, 0, 0.1)",
              }}
            >
              <h2
                style={{
                  fontSize: "1.25rem",
                  fontWeight: "600",
                  marginBottom: "1rem",
                  color: "#333",
                }}
              >
                Connect with RainbowKit
              </h2>
              <ConnectButton />
            </section>
          )}

          {showConnectionOptions === "Sophon Global Account" && (
            <section
              style={{
                padding: "1.5rem",
                borderRadius: "12px",
                border: "1px solid #e1e1e1",
                backgroundColor: "#ffffff",
                boxShadow: "0 2px 8px rgba(0, 0, 0, 0.1)",
              }}
            >
              <h2
                style={{
                  fontSize: "1.25rem",
                  fontWeight: "600",
                  marginBottom: "1rem",
                  color: "#333",
                }}
              >
                Connect with Sophon Global Account
              </h2>
              <SophonConnectButton authenticatedComponent={<ConnectButton />} />
            </section>
          )}
        </div>

        {isConnected && (
          <>
            <div
              style={{ display: "flex", gap: "0.5rem", marginBottom: "1rem" }}
            >
              <button
                onClick={() => setShowSignTx(SignTxOptions.SignTransaction)}
                style={{
                  padding: "0.5rem 1rem",
                  borderRadius: "8px",
                  border: "1px solid #e1e1e1",
                  backgroundColor: "#3b82f6",
                  color: "white",
                  cursor: "pointer",
                  fontWeight: "600",
                  fontSize: "16px",
                }}
              >
                Sign Transaction
              </button>
              <button
                onClick={() => setShowSignTx(SignTxOptions.RecoverAddress)}
                style={{
                  padding: "0.5rem 1rem",
                  borderRadius: "8px",
                  border: "1px solid #e1e1e1",
                  backgroundColor: "#3b82f6",
                  color: "white",
                  cursor: "pointer",
                  fontWeight: "600",
                  fontSize: "16px",
                }}
              >
                Recover Address
              </button>
              <button
                onClick={() => setShowSignTx(SignTxOptions.VerifySignature)}
                style={{
                  padding: "0.5rem 1rem",
                  borderRadius: "8px",
                  border: "1px solid #e1e1e1",
                  backgroundColor: "#3b82f6",
                  color: "white",
                  cursor: "pointer",
                  fontWeight: "600",
                  fontSize: "16px",
                }}
              >
                Verify Signature
              </button>
            </div>

            {showSignTx === SignTxOptions.SignTransaction ? (
              <SignTransaction />
            ) : showSignTx === SignTxOptions.RecoverAddress ? (
              <SignMessage />
            ) : (
              <VerifySignature />
            )}
          </>
        )}

        <h1 className={styles.title}>
          Welcome to <a href="https://www.rainbowkit.com">RainbowKit</a> +{" "}
          <a href="https://wagmi.sh">wagmi</a> +{" "}
          <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a className={styles.card} href="https://rainbowkit.com">
            <h2>RainbowKit Documentation &rarr;</h2>
            <p>Learn how to customize your wallet connection flow.</p>
          </a>

          <a className={styles.card} href="https://wagmi.sh">
            <h2>wagmi Documentation &rarr;</h2>
            <p>Learn how to interact with Ethereum.</p>
          </a>

          <a
            className={styles.card}
            href="https://github.com/rainbow-me/rainbowkit/tree/main/examples"
          >
            <h2>RainbowKit Examples &rarr;</h2>
            <p>Discover boilerplate example RainbowKit projects.</p>
          </a>

          <a className={styles.card} href="https://nextjs.org/docs">
            <h2>Next.js Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a
            className={styles.card}
            href="https://github.com/vercel/next.js/tree/canary/examples"
          >
            <h2>Next.js Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            className={styles.card}
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
    </div>
  );
};

export default Home;
